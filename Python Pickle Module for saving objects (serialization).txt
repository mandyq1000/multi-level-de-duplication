What is Going On? Everybody, welcome to Another Basics Python Tutorial Video. This Video Is Going To be concerning another Standard Library Module called Pickle. So What Is Pickle? What Do We Even Use It For and all that? Pickle is A Serialization And Deserialization module. Basically, It converts Python Objects to Byte Stream and then Back Again. Cool. So What Does That mean? Okay, so Basically what It's Doing is, in Fact, if you're coming from Other Languages, you might know this Is Like Flattening, serialization Marshaling, stuff like that. But In Python, everyone's Going To Refer to this as Pickling. So Try Not To Use Those Other words. Some People Might Not Even Know What They Mean. So Pickling Again, Is Used To Store Python Objects. So This Could Be Like A Whole Lot Of things. This Could Be maybe an Object you've created from A class. This Could Be A variable. This Could Be obviously A Variable, but this could be like A list. This could be All Kinds Of Things that You Can Pickle. So Why Might You Want To Pickle or when Are People Using Pickling? An Example from Our Own Tutorials is, for Example, when We've Pickled A Machine Learning Classifier. So With Machine Learning, when You Create A Classifier, you Have To you create it by training A Classifier. The Training Process Takes A While, but What Your End Result is An Object, and That Object Is Your Classifier. So you have One or two choices. You can either somehow Save That Classifier, or Every Time You Want It, you Actually Have to go Back and Retrain It every single time that's Inefficient. So We Use Pickle, so we can Pickle or Serialize into Bite Stream and then Depickle or Deserialize back to A Python object. So let's go ahead And Just show A Quick example. Let's Go Ahead And Import Pickle. Another Example Why You Might Use It Too is Say You Have A Large Data Set that You're Using very frequently, every Time You Read In A Data set, either Way, you're connecting to A MySQL database. Maybe You've Got A CSV, maybe you're just using a Flat File or something that Read in Process takes A While. And If You Pickle It, it's Going To Be A Whole Lot Faster. So Keep That In Mind. Sometimes your Loading Time, let's say compared to JSON, or Pulling in from A Sequel Database, we're looking at 50 to 100 plus sometimes up to 1000 or more times Faster. So it's Useful just for anything that requires a Lot Of Processing and Ends in An Object. Okay. Anyways, importing Pickle. Next Thing, let's Just Create An Example Dictionary. So Let's Say Example DICT equals something, and let's just say it's one Colon something, two Colon Something, and then Three Something. And Then let's just put some arbitrary things in there. Good. So Now We Have Our Example Dictionary. Now, How Will We Output This? Or How Do We Pickle this? Well, we can do something like this pickle out is going to equal open. And we want to open dick pickle. And we're going to open it with the intention not only to write, but we're writing bytes. So WB for bytes, if you're coming from Python 27 and you're watching this and you refuse to make the switch to three, just know you don't really need this. This is a requirement for three. So now you've got pickle out. Now that we have this pickle out file, what we're going to do is we're going to say pickle dump. So here we're referencing the pickle module. So pickle dump. And then we pass some parameters. First of all, what do we want to dump? Well, we want to dump the example dictionary. And then the second parameter, where do we want to dump it? We want to dump it to pickle out. Save that. And then don't forget, obviously after you write anything to files, go ahead and close it. So let's say pickleout close before we make those mistakes and that will save something to this DICT pickle. It will go in the same directory as your script. Feel free to go check there if you want. Now how do we load the pickle back in? So how do we debickle something? Well, we basically go through a pretty similar path. And in fact, let me pull up let's pull up the pickle. This is the pickle here. Let's open it with notepad. Take a peek. Okay, so that doesn't really quite look like anything we could read, but that is our information. It's just we don't recognize it ourselves. Makes a whole lot of sense to the computer though. So anyways, set aside, let's close this out. How do we read that dictionary back into memory? Well, let me go ahead and just comment those out. If you don't know how to comment, bulk it's, highlight everything alt three and that will bulk comment something. So now let's pickle in. So we're going to say pickle, pickle underscore in equals open. And then we're going to open that same file dick pickle. And we want to open it with the intention to read, but read what bytes? So now we have the pickle. And then now that we have that, all we have to do is we're just going to say pickle load. So we would say something like this example DICT. So we're just calling it the same thing. But again, this is all commented out. So it's doing nothing. Exampledict equals pickle load. What do we want to load? We want to load this pickle in file and that's that. So now what we can do is we can say let's just print the example dick and then approve that it is indeed acting as the object that it truly is. Because when you save an object, it also saves the data type and the object type and all that. So to prove that, let's just do print example dick, and then two. So if you recall, this would be the key of two. So we should return a value of two. I have no idea what just happened. There we go. I have never used this. Anyway, example dick, two. Print that out so we can see that it's acting like a dictionary. Sure enough, here is our dictionary and here is our value. We can also do like three just so we can get a different number or letter. Actually, I used F, so that's pickling. That's why you would pickle, and it's pretty useful. Only caveat you should take note is you might use pickles to transfer data between maybe some servers, or you might pick up a pickle, or you might pickle some data from another source. It's unlikely that you're just going to parse a website that has pickle or anything, but you might have it being transferred via network. Pickle has no security in place. So you load that object, you run that object. You better be certain about the security of that object, otherwise you could run some malicious code. So anyways, that's pickle. In the next tutorial, we're going to be talking about eval, which is sort of like pickle if you wanted to save something into a string form or something like that. But it's more commonly used if you wanted read someone else's string version of something. Anyways, that's what's up next. If you have any questions or comments on this video, please feel free to leave them below. Otherwise, as always, thanks for watching. Thanks for all the support and subscriptions, and until next time, bye.